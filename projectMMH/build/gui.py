
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer

import pyrebase
import hashlib
import getpass
import pymongo as mdb
import certifi
from pathlib import Path
import sys
sys.path.append("/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/CP-ABE/Include")
import auth as fba
import sys
sys.path.append("/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/CP-ABE")
import user
import DataOwner as do
from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage, messagebox, filedialog


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame0")

myclient = mdb.MongoClient(
    "mongodb+srv://22520415:u6nBvR4Mx7mfsENV@mmh.yzt5r4z.mongodb.net/?retryWrites=true&w=majority&appName=MMH", 
    tls=True, 
    tlsCAFile=certifi.where(),
    tlsAllowInvalidCertificates=False,
    )
mydb = myclient['mmh']

# Quy tắc kiểm soát truy cập ABAC
access_policies = [
    {"role": "user", "resource": "user_dashboard"},
    {"role": "staff", "faculty": "Pharmacy", "resource": "user_dashboard"},
    {"role": "staff", "faculty": "Emergency", "resource": "user_dashboard"},
    {"role": "staff", "faculty": "Cardiology", "resource": "user_dashboard"},
    {"role": "staff", "faculty": "Psychology", "resource": "user_dashboard"},
    {"role": "staff", "faculty": "Respiratory", "resource": "user_dashboard"},
    {"role": "staff", "faculty": "Pediatric", "resource": "user_dashboard"},
    {"role": "dataowner", "resource": "dataowner_dashboard"}
]

# Hàm kiểm tra truy cập
def check_access(user, resource):
    for policy in access_policies:
        if policy["role"] == user["role"] and (user["role"] == "user" or user["role"] == "dataowner"):
            if policy["resource"] == resource:
                return True
        elif policy["role"] == user["role"] and user["role"] == "staff" and policy["faculty"] == user["faculty"] and policy["resource"] == resource:
            return True
    return False

def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

a = fba.auth()

d = do.DataOwner()

def main():
    window = Tk()
    root = guiLogin(window)
    window.mainloop()

class guiLogin:
    
    
    def __init__(self,window):
        self.ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame0")
        self.window = window
        window.geometry("1068x626")
        window.configure(bg = "#D9D9D9")


        canvas = Canvas(
            window,
            bg = "#D9D9D9",
            height = 626,
            width = 1068,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            364.0,
            137.0,
            703.0,
            489.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_text(
            485.0,
            159.0,
            anchor="nw",
            text="LOGIN",
            fill="#000000",
            font=("Inter", 30 * -1)
        )

        entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_image_1 = entry_image_1
        entry_bg_1 = canvas.create_image(
            534.0,
            258.5,
            image=entry_image_1
        )
        
        entry_1 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=401.0,
            y=239.0,
            width=266.0,
            height=37.0
        )

        entry_image_2 = PhotoImage(
            file=self.relative_to_assets("entry_2.png"))
        self.entry_image_2 = entry_image_2
        entry_bg_2 = canvas.create_image(
            534.0,
            333.5,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0,
            show = "*"
        )
        entry_2.place(
            x=401.0,
            y=314.0,
            width=266.0,
            height=37.0
        )


        canvas.create_text(
            401.0,
            216.0,
            anchor="nw",
            text="email",
            fill="#000000",
            font=("Inter", 15 * -1)
        )

        canvas.create_text(
            401.0,
            287.0,
            anchor="nw",
            text="password",
            fill="#000000",
            font=("Inter", 15 * -1)
        )

        button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_image_1 = button_image_1 
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: {
                self.login(entry_1.get(),entry_2.get())
            },
            relief="flat"
        )

        button_1.place(
            x=401.0,
            y=382.0,
            width=266.0,
            height=36.0
        )

        canvas.create_text(
            409.0,
            447.0,
            anchor="nw",
            text="Do you have an account? ",
            fill="#000000",
            font=("Inter", 15 * -1)
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_image_2 = button_image_2 
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=self.changguiSignup,
            relief="flat"
        )
        button_2.place(
            x=614.0,
            y=447.0,
            width=53.0,
            height=19.0
        )
        window.resizable(False, False)

    def changguiSignup(self):
        self.window.destroy()
        window = Tk()
        root = guiSignup(window)
        window.mainloop()

    def login(self,str1,str2):
        role = a.login(str1,str2)
        print(f"{role}")
        if (role != False):
            if (role is None): 
                messagebox.showwarning("Can not log in","Your email or password wong!")
                return
            c = mydb['user']
            doc = c.find_one({'_id': role})
            if (check_access(doc, "dataowner_dashboard")):
                print("dataowner")
                self.changeguiDataowner(role)
            elif (check_access(doc, "user_dashboard")):
                print("user")
                self.changeguiUser(role)
            else: 
                messagebox.showwarning("Can not log in","Your email or password wong!")
        else: 
            messagebox.showwarning("Warning","Invalid Account!")

    def changeguiDataowner(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOaddphr(window,id)
        window.mainloop()

    def changeguiUser(self,id):
        self.window.destroy()
        window = Tk()
        root = guiUser(window,id)
        window.mainloop()

    def relative_to_assets(self,path: str) -> Path:
        return self.ASSETS_PATH / Path(path)

class guiSignup:
    def __init__(self,window):
        self.window = window
        self.ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame6")

        window.geometry("1068x626")
        window.configure(bg = "#D9D9D9")


        canvas = Canvas(
            window,
            bg = "#D9D9D9",
            height = 626,
            width = 1068,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            333.0,
            61.0,
            734.0,
            577.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_text(
            473.0,
            70.0,
            anchor="nw",
            text="SIGNUP",
            fill="#000000",
            font=("Inter", 30 * -1)
        )

        entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_image_1 = entry_image_1
        entry_bg_1 = canvas.create_image(
            528.0,
            164.5,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=395.0,
            y=145.0,
            width=266.0,
            height=37.0
        )

        entry_image_2 = PhotoImage(
            file=self.relative_to_assets("entry_2.png"))
        self.entry_image_2 = entry_image_2
        entry_bg_2 = canvas.create_image(
            528.0,
            238.5,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0,
            show = "*"
        )
        entry_2.place(
            x=395.0,
            y=219.0,
            width=266.0,
            height=37.0
        )

        canvas.create_text(
            395.0,
            122.0,
            anchor="nw",
            text="email",
            fill="#000000",
            font=("Inter", 15 * -1)
        )

        canvas.create_text(
            395.0,
            196.0,
            anchor="nw",
            text="password",
            fill="#000000",
            font=("Inter", 15 * -1)
        )

        entry_image_3 = PhotoImage(
            file=self.relative_to_assets("entry_3.png"))
        self.entry_image_3 = entry_image_3
        entry_bg_3 = canvas.create_image(
            528.0,
            318.5,
            image=entry_image_3
        )
        entry_3 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_3.place(
            x=395.0,
            y=299.0,
            width=266.0,
            height=37.0
        )

        # entry_image_4 = PhotoImage(
        #     file=self.relative_to_assets("entry_4.png"))
        # self.entry_image_4 = entry_image_4
        # entry_bg_4 = canvas.create_image(
        #     528.0,
        #     394.5,
        #     image=entry_image_4
        # )
        # entry_4 = Entry(
        #     bd=0,
        #     bg="#E8E8E8",
        #     fg="#000716",
        #     highlightthickness=0
        # )
        # entry_4.place(
        #     x=395.0,
        #     y=375.0,
        #     width=266.0,
        #     height=37.0
        # )

        canvas.create_text(
            395.0,
            276.0,
            anchor="nw",
            text="citizenID( must have length 12)",
            fill="#000000",
            font=("Inter", 15 * -1)
        )

        # canvas.create_text(
        #     395.0,
        #     352.0,
        #     anchor="nw",
        #     text="role (DataOwner or User)",
        #     fill="#000000",
        #     font=("Inter", 15 * -1)
        # )

        button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_image_1 = button_image_1
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.Signup(entry_1.get(),entry_2.get(),entry_3.get()),
            relief="flat"
        )
        button_1.place(
            x=395.0,
            y=451.0,
            width=266.0,
            height=36.0
        )

        canvas.create_text(
            403.0,
            524.0,
            anchor="nw",
            text="Already have an account? ",
            fill="#000000",
            font=("Inter", 15 * -1)
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_image_2 = button_image_2
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=self.guiLogin,
            relief="flat"
        )
        button_2.place(
            x=617.0,
            y=524.0,
            width=53.0,
            height=19.0
        )
        self.window.resizable(False, False)  

    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)
    
    def guiLogin(self):
        self.window.destroy()
        window = Tk()
        root = guiLogin(window)
        window.mainloop()

    def Signup(self,email,password,citizenId,role):
        if (len(citizenId) != 12 and len(password) < 6):
            messagebox.showwarning("Warning","CitizenID must have length 12 characters\nPlease set a password longer than 5 characters")
            return
        if (len(citizenId) != 12):
            messagebox.showwarning("Warning","CitizenID must have length 12 characters")
            return
        if (len(password) < 6):
            messagebox.showwarning("Warning","Please set a password longer than 5 characters")
            return
        role = a.signup( email, password, citizenId)
        if (role == False ):
            messagebox.showwarning("Warning","Invalid role")
        else:
            messagebox.showinfo("Sign Up","Sign up successfully")
            self.guiLogin()


class guiUser:
    def __init__(self,window,id):
        self.ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame2")
        self.window = window

        window.geometry("1068x626")
        window.configure(bg = "#D9D9D9")


        canvas = Canvas(
            window,
            bg = "#D9D9D9",
            height = 626,
            width = 1068,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            373.0,
            25.0,
            1027.0,
            607.0,
            fill="#FFFFFF",
            outline="")

        entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_imagae_1 = entry_image_1
        entry_bg_1 = canvas.create_image(
            658.0,
            134.0,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=418.0,
            y=107.0,
            width=480.0,
            height=52.0
        )

        canvas.create_text(
            424.0,
            76.0,
            anchor="nw",
            text="PatientID",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        canvas.create_rectangle(
            15.0,
            25.0,
            336.0,
            79.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_text(
            123.0,
            31.0,
            anchor="nw",
            text="MENU",
            fill="#000000",
            font=("Inter", 35 * -1)
        )

        button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_imagae_1 = button_image_1
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_1 clicked"),
            relief="flat"
        )
        button_1.place(
            x=15.0,
            y=107.0,
            width=321.0,
            height=54.0
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_imagae_2 = button_image_2
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.viewphrdetail(entry_1.get(),id),
            relief="flat"
        )
        button_2.place(
            x=839.0,
            y=195.0,
            width=117.0,
            height=54.0
        )

        button_image_3 = PhotoImage(
            file=self.relative_to_assets("button_3.png"))
        self.button_imagae_3 = button_image_3
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_3.place(
            x=15.0,
            y=195.0,
            width=321.0,
            height=54.0
        )
        window.resizable(False, False)

    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)
    
    def logout(self):
        self.window.destroy()
        window = Tk()
        root = guiLogin(window)
        window.mainloop()

    def viewphrdetail(self,request,id):
        file = user.phrdetails(request,id)
        if (file == True):
            messagebox.showinfo("Download Done",f"File download successfully to {Path.cwd()}")
        else:
            messagebox.showwarning("Warning","Policy not satisfied!")

class guiDOaddphr:
    def __init__(self,window,id):
        self.window = window


        self.ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame3")

        window.geometry("1068x626")
        window.configure(bg = "#D9D9D9")


        canvas = Canvas(
            window,
            bg = "#D9D9D9",
            height = 626,
            width = 1068,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            373.0,
            25.0,
            1027.0,
            607.0,
            fill="#FFFFFF",
            outline="")
        

        button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_image_1 = button_image_1
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.addphr(entry_1.get(),entry_2.get(),id),
            relief="flat"
        )
        button_1.place(
            x=726.0,
            y=520.0,
            width=205.0,
            height=54.0
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_image_2 = button_image_2
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: {
                entry_1.delete(0, len(entry_1.get())),
                entry_1.insert(0, self.select_path())
            },
            relief="flat"
        )
        button_2.place(
            x=679.0,
            y=183.0,
            width=321.0,
            height=54.0
        )

        canvas.create_rectangle(
            15.0,
            25.0,
            336.0,
            79.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_rectangle(
            451.0,
            104.0,
            931.0,
            158.0,
            fill="#E8E8E8",
            outline="")

        canvas.create_text(
            123.0,
            31.0,
            anchor="nw",
            text="MENU",
            fill="#000000",
            font=("Inter", 35 * -1)
        )

        

        button_image_3 = PhotoImage(
            file=self.relative_to_assets("button_3.png"))
        self.button_image_3 = button_image_3
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_3 clicked"),
            relief="flat"
        )
        button_3.place(
            x=15.0,
            y=104.0,
            width=321.0,
            height=54.0
        )

        button_image_4 = PhotoImage(
            file=self.relative_to_assets("button_4.png"))
        self.button_image_4 = button_image_4
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guirevoatt(id),
            relief="flat"
        )
        button_4.place(
            x=15.0,
            y=183.0,
            width=321.0,
            height=54.0
        )

        canvas.create_text(
            428.0,
            65.0,
            anchor="nw",
            text="PHR file( json format)",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_imagae_1 = entry_image_1
        entry_bg_1 = canvas.create_image(
            668.0,
            131.0,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=428.0,
            y=104.0,
            width=480.0,
            height=52.0
        )

        entry_image_2 = PhotoImage(
            file=relative_to_assets("entry_2.png"))
        entry_bg_1 = canvas.create_image(
            668.0,
            325.0,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=428.0,
            y=298.0,
            width=480.0,
            height=52.0
        )

        canvas.create_text(
            428.0,
            259.0,
            anchor="nw",
            text="X-ray or Endoscopic image file( png format)",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        button_image_8 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_image_8 = button_image_8
        button_8 = Button(
            image=button_image_8,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: {
                entry_2.delete(0, len(entry_1.get())),
                entry_2.insert(0, self.select_image())
            },
            relief="flat"
        )
        button_8.place(
            x=679.0,
            y=370.0,
            width=321.0,
            height=54.0
        )

        button_image_5 = PhotoImage(
            file=self.relative_to_assets("button_5.png"))
        self.button_image_5 = button_image_5
        button_5 = Button(
            image=button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiupdphr(id),
            relief="flat"
        )
        button_5.place(
            x=15.0,
            y=259.0,
            width=321.0,
            height=54.0
        )

        button_image_6 = PhotoImage(
            file=self.relative_to_assets("button_6.png"))
        self.button_image_6 = button_image_6
        button_6 = Button(
            image=button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_6.place(
            x=15.0,
            y=411.0,
            width=321.0,
            height=54.0
        )
        button_image_7 = PhotoImage(
            file=self.relative_to_assets("button_7.png"))
        self.button_image_7 = button_image_7
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiupdpoli(id),
            relief="flat"
        )
        button_7.place(
            x=15.0,
            y=334.0,
            width=321.0,
            height=54.0
        )
        window.resizable(False, False)
    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)
    
    def select_path(self):
        output_path = filedialog.askopenfilename(initialdir = "/",
                                          title = "Select a File",
                                          filetypes = (("Json file",
                                                        "*.json*"),
                                                       ))
        if (len(output_path) != 0 ):
            return output_path
        else: return ""
    def select_image(self):
        output_path = filedialog.askopenfilename(initialdir = "/",
                                          title = "Select a File",
                                          filetypes = (("Image file",
                                                        "*.png*"),
                                                       ))
        if (len(output_path) != 0 ):
            return output_path
        else: return ""

    def addphr(self,fileName,fileImage,idowner):
        if (fileName == ""):
            messagebox.showwarning("Warning","Please choose PHR file!")
            return
        done = d.addphr(fileName,fileImage,idowner)
        if (done == True ):
            messagebox.showinfo("Add PHR","Add successfully")
        else: 
            messagebox.showerror("Error","Something wrong!")

    def guirevoatt(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOrevoatt(window,id)
        window.mainloop()

    def guiupdphr(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOupdphr(window,id)
        window.mainloop()

    def guiupdpoli(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOuppoli(window,id)
        window.mainloop()

    def logout(self):
        self.window.destroy()
        window = Tk()
        root = guiLogin(window)
        window.mainloop()
    

class guiDOrevoatt:
    def __init__(self,window,id):
        self.window = window
        self.ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame1")

        window.geometry("1068x626")
        window.configure(bg = "#D9D9D9")


        canvas = Canvas(
            window,
            bg = "#D9D9D9",
            height = 626,
            width = 1068,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            391.0,
            25.0,
            1045.0,
            607.0,
            fill="#FFFFFF",
            outline="")

        entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_image_1 = entry_image_1
        entry_bg_1 = canvas.create_image(
            691.0,
            232.0,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=451.0,
            y=205.0,
            width=480.0,
            height=52.0
        )

        canvas.create_text(
            457.0,
            174.0,
            anchor="nw",
            text="RevokeID( BNxxx, BSxxx, USxxx)",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        entry_image_2 = PhotoImage(
            file=self.relative_to_assets("entry_2.png"))
        self.entry_image_2 = entry_image_2
        entry_bg_2 = canvas.create_image(
            691.0,
            131.0,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=451.0,
            y=104.0,
            width=480.0,
            height=52.0
        )

        canvas.create_rectangle(
            15.0,
            25.0,
            336.0,
            79.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_text(
            123.0,
            31.0,
            anchor="nw",
            text="MENU",
            fill="#000000",
            font=("Inter", 35 * -1)
        )

        button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_image_1 =  button_image_1
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiaddphr(id),
            relief="flat"
        )
        button_1.place(
            x=15.0,
            y=104.0,
            width=321.0,
            height=54.0
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_image_2 =  button_image_2
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        button_2.place(
            x=14.0,
            y=189.0,
            width=321.0,
            height=54.0
        )

        canvas.create_text(
            457.0,
            73.0,
            anchor="nw",
            text="PatientID",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        button_image_3 = PhotoImage(
            file=self.relative_to_assets("button_3.png"))
        self.button_image_3 =  button_image_3
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.revoatt(entry_2.get(),entry_1.get(),id),
            relief="flat"
        )
        button_3.place(
            x=746.0,
            y=498.0,
            width=181.16128540039062,
            height=54.0
        )

        button_image_4 = PhotoImage(
            file=self.relative_to_assets("button_4.png"))
        self.button_image_4 =  button_image_4
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiupdphr(id),
            relief="flat"
        )
        button_4.place(
            x=17.0,
            y=274.0,
            width=321.0,
            height=54.0
        )

        

        button_image_6 = PhotoImage(
            file=self.relative_to_assets("button_6.png"))
        self.button_image_6 =  button_image_6
        button_6 = Button(
            image=button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiupdpoli(id),
            relief="flat"
        )
        button_6.place(
            x=15.0,
            y=359.0,
            width=321.0,
            height=54.0
        )

        button_image_7 = PhotoImage(
            file=self.relative_to_assets("button_7.png"))
        self.button_image_7 =  button_image_7
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_7.place(
            x=17.0,
            y=444.0,
            width=321.0,
            height=54.0
        )
        window.resizable(False, False)
    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)
    
    def guiupdphr(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOupdphr(window,id)
        window.mainloop()

    def guiaddphr(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOaddphr(window,id)
        window.mainloop()

    def logout(self):
        self.window.destroy()
        window = Tk()
        root = guiLogin(window)
        window.mainloop()

    def guiupdpoli(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOuppoli(window,id)
        window.mainloop()

    def revoatt(self,phrId,id,idowner):
        if (id == idowner):
            messagebox.showwarning("Warning","You can not revoke attribute yourself")
            return
        done = d.revoatt(phrId,id,idowner)
        if (done == True ):
            messagebox.showinfo("Revocation Attribute","Update Successfully")
        elif (done == False):
            messagebox.showwarning("Warning","Policy not satisfied!")
        else:
            messagebox.showerror("Error","Something wrong!")

class guiDOupdphr:
    def __init__(self,window,id):
        self.ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame4")
        self.window = window

        window.geometry("1068x626")
        window.configure(bg = "#D9D9D9")


        canvas = Canvas(
            window,
            bg = "#D9D9D9",
            height = 626,
            width = 1068,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            373.0,
            25.0,
            1027.0,
            607.0,
            fill="#FFFFFF",
            outline="")

        button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_image_1 = button_image_1
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: {
                entry_2.delete(0, len(entry_2.get())),
                entry_2.insert(0, self.select_path())
            },
            relief="flat"
        )
        button_1.place(
            x=686.0,
            y=290.0,
            width=321.0,
            height=54.0
        )

        canvas.create_rectangle(
            451.0,
            214.0,
            931.0,
            268.0,
            fill="#E8E8E8",
            outline="")

        canvas.create_text(
            451.0,
            175.0,
            anchor="nw",
            text="PHR file( json format)",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_image_1 = entry_image_1
        entry_bg_1 = canvas.create_image(
            691.0,
            131.0,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=451.0,
            y=104.0,
            width=480.0,
            height=52.0
        )

        entry_image_2 = PhotoImage(
            file=self.relative_to_assets("entry_2.png"))
        self.entry_image_2 = entry_image_2
        entry_bg_2 = canvas.create_image(
            691.0,
            241.0,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=451.0,
            y=214.0,
            width=480.0,
            height=52.0
        )


        canvas.create_text(
            452.0,
            73.0,
            anchor="nw",
            text="PatientID",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        canvas.create_rectangle(
            15.0,
            25.0,
            336.0,
            79.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_text(
            123.0,
            31.0,
            anchor="nw",
            text="MENU",
            fill="#000000",
            font=("Inter", 35 * -1)
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_image_2 = button_image_2
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        button_2.place(
            x=15.0,
            y=248.0,
            width=321.0,
            height=54.0
        )

        button_image_3 = PhotoImage(
            file=self.relative_to_assets("button_3.png"))
        self.button_image_3 = button_image_3
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guirevoatt(id),
            relief="flat"
        )
        button_3.place(
            x=15.0,
            y=175.0,
            width=321.0,
            height=54.0
        )

        button_image_4 = PhotoImage(
            file=self.relative_to_assets("button_4.png"))
        self.button_image_4 = button_image_4
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.updphr(entry_1.get(),entry_2.get(),id),
            relief="flat"
        )
        button_4.place(
            x=762.0,
            y=471.0,
            width=169.0,
            height=54.0
        )

        button_image_5 = PhotoImage(
            file=self.relative_to_assets("button_5.png"))
        self.button_image_5 = button_image_5
        button_5 = Button(
            image=button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiupdpoli(id),
            relief="flat"
        )
        button_5.place(
            x=15.0,
            y=330.0,
            width=321.0,
            height=54.0
        )

        button_image_6 = PhotoImage(
            file=self.relative_to_assets("button_6.png"))
        self.button_image_6 = button_image_6
        button_6 = Button(
            image=button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_6.place(
            x=15.0,
            y=417.0,
            width=321.0,
            height=54.0
        )

        button_image_7 = PhotoImage(
            file=self.relative_to_assets("button_7.png"))
        self.button_image_7 = button_image_7
        button_7 = Button(
            image=button_image_7,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiaddphr(id),
            relief="flat"
        )
        button_7.place(
            x=15.0,
            y=95.0,
            width=321.0,
            height=54.0
        )
        window.resizable(False, False)

    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)
    
    def updphr(self,phrId,fileName,idowner):
        done = d.updphr(phrId,fileName,idowner)
        if (done == True):
            messagebox.showinfo("Update PHR","Update Successfully")
        elif (done == False):
            messagebox.showwarning("Warning","PHR ID is not same")
        else:
            messagebox.showerror("Error","Something wrong!")

    def select_path(self):
        output_path = filedialog.askopenfilename(initialdir = "/",
                                          title = "Select a File",
                                          filetypes = (("Json file",
                                                        "*.json*"),
                                                       ))
        if (len(output_path) != 0 ):
            return output_path
        else: return ""

    def guiupdpoli(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOuppoli(window,id)
        window.mainloop()

    def guiaddphr(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOaddphr(window,id)
        window.mainloop()

    def logout(self):
        self.window.destroy()
        window = Tk()
        root = guiLogin(window)
        window.mainloop()

    def guirevoatt(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOrevoatt(window,id)
        window.mainloop()

class guiDOuppoli:
    def __init__(self,window,id):
        self.ASSETS_PATH = OUTPUT_PATH / Path(r"/home/skyd214/Documents/MMH/project/Project-MMH-CP-ABE/build/assets/frame5")
        self.window = window

        window.geometry("1068x626")
        window.configure(bg = "#D9D9D9")


        canvas = Canvas(
            window,
            bg = "#D9D9D9",
            height = 626,
            width = 1068,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )

        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            373.0,
            25.0,
            1027.0,
            607.0,
            fill="#FFFFFF",
            outline="")

        entry_image_1 = PhotoImage(
            file=self.relative_to_assets("entry_1.png"))
        self.entry_imagae_1 = entry_image_1
        entry_bg_1 = canvas.create_image(
            691.0,
            238.0,
            image=entry_image_1
        )
        entry_1 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_1.place(
            x=451.0,
            y=211.0,
            width=480.0,
            height=52.0
        )

        canvas.create_text(
            452.0,
            180.0,
            anchor="nw",
            text="IDUser( BNxxx, BSxxx, USxxx)",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        entry_image_2 = PhotoImage(
            file=self.relative_to_assets("entry_2.png"))
        self.entry_imagae_2 = entry_image_2
        entry_bg_2 = canvas.create_image(
            691.0,
            131.0,
            image=entry_image_2
        )
        entry_2 = Entry(
            bd=0,
            bg="#E8E8E8",
            fg="#000716",
            highlightthickness=0
        )
        entry_2.place(
            x=451.0,
            y=104.0,
            width=480.0,
            height=52.0
        )

        canvas.create_text(
            452.0,
            73.0,
            anchor="nw",
            text="PatientID",
            fill="#000000",
            font=("Inter", 25 * -1)
        )

        button_image_1 = PhotoImage(
            file=self.relative_to_assets("button_1.png"))
        self.button_image_1 =  button_image_1
        button_1 = Button(
            image=button_image_1,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guirevoatt(id),
            relief="flat"
        )
        button_1.place(
            x=15.0,
            y=187.0,
            width=321.0,
            height=54.0
        )

        canvas.create_rectangle(
            15.0,
            25.0,
            336.0,
            79.0,
            fill="#FFFFFF",
            outline="")

        canvas.create_text(
            123.0,
            31.0,
            anchor="nw",
            text="MENU",
            fill="#000000",
            font=("Inter", 35 * -1)
        )

        button_image_2 = PhotoImage(
            file=self.relative_to_assets("button_2.png"))
        self.button_image_2 =  button_image_2
        button_2 = Button(
            image=button_image_2,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: print("button_2 clicked"),
            relief="flat"
        )
        button_2.place(
            x=15.0,
            y=355.0,
            width=321.0,
            height=54.0
        )

        button_image_3 = PhotoImage(
            file=self.relative_to_assets("button_3.png"))
        self.button_image_3 =  button_image_3
        button_3 = Button(
            image=button_image_3,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.updpoli(entry_2.get(),entry_1.get(),id),
            relief="flat"
        )
        button_3.place(
            x=771.0,
            y=490.0,
            width=160.0,
            height=54.0
        )

        button_image_4 = PhotoImage(
            file=self.relative_to_assets("button_4.png"))
        self.button_image_4 =  button_image_4
        button_4 = Button(
            image=button_image_4,
            borderwidth=0,
            highlightthickness=0,
            command=self.logout,
            relief="flat"
        )
        button_4.place(
            x=15.0,
            y=436.0,
            width=321.0,
            height=54.0
        )

        button_image_5 = PhotoImage(
            file=self.relative_to_assets("button_5.png"))
        self.button_image_5 =  button_image_5
        button_5 = Button(
            image=button_image_5,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiaddphr(id),
            relief="flat"
        )
        button_5.place(
            x=15.0,
            y=106.0,
            width=321.0,
            height=54.0
        )

        button_image_6 = PhotoImage(
            file=self.relative_to_assets("button_6.png"))
        self.button_image_6 =  button_image_6
        button_6 = Button(
            image=button_image_6,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.guiupdphr(id),
            relief="flat"
        )
        button_6.place(
            x=15.0,
            y=274.0,
            width=321.0,
            height=54.0
        )
        window.resizable(False, False)
    def relative_to_assets(self, path: str) -> Path:
        return self.ASSETS_PATH / Path(path)
    
    def guiaddphr(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOaddphr(window,id)
        window.mainloop()

    def logout(self):
        self.window.destroy()
        window = Tk()
        root = guiLogin(window)
        window.mainloop()

    def guirevoatt(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOrevoatt(window,id)
        window.mainloop()

    def guiupdphr(self,id):
        self.window.destroy()
        window = Tk()
        root = guiDOupdphr(window,id)
        window.mainloop()
        
    def updpoli(self,phrId,id,idowner):
        done = d.updpoli(phrId,id,idowner)
        if (done == True ):
            messagebox.showinfo("Revocation Attribute","Update Successfully")
        elif (done == False):
            messagebox.showwarning("Warning","Policy not satisfied!")
        else:
            messagebox.showerror("Error","Something wrong!")

if __name__=="__main__":
    main()        